name: Check if the CHANGELOG.md has been modified
on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, edited]
jobs:
  check-changelog:
    if: github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Check for 'skip-changelog' label
        id: check-label
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const hasLabel = labels.data.some(label => label.name === 'skip-changelog');
            return hasLabel;
      - name: Check for 'skip-changelog' comment
        id: check-body
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            return pr.data.body || '';
      - name: Eval if changelog can be omited
        id: skip-check
        run: |
          echo "Label: ${{ steps.check-label.outputs.result }}"
          echo "Comment: ${{ steps.check-body.outputs.result }}"
          if [[ "${{ steps.check-label.outputs.result }}" == "true" ]]; then
            echo "Label detected"
            echo "SKIP=true" >> $GITHUB_ENV
          elif echo "${{ steps.check-body.outputs.result }}" | grep -qE '^#skip-changelog$'; then
            echo "Comment detected"
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: CHANGELOG.md verify
        if: env.SKIP != 'true'
        run: |
          git fetch origin develop --depth=1
          git checkout ${{ github.head_ref }}
          git diff --name-only FETCH_HEAD > changed_files.txt
          cat changed_files.txt
